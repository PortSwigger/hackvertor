name: Release on Version Change

on:
  push:
    branches:
      - master
      - main
    paths:
      - 'src/main/java/burp/hv/HackvertorExtension.java'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
      version_changed: ${{ steps.check_version.outputs.changed }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Extract current version
        id: extract_version
        run: |
          VERSION=$(grep -E '^\s*public static String version = "v[0-9]+\.[0-9]+\.[0-9]+";' src/main/java/burp/hv/HackvertorExtension.java | sed -E 's/.*"(v[0-9]+\.[0-9]+\.[0-9]+)".*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"
      
      - name: Check if version changed
        id: check_version
        run: |
          # Get the previous version from the last commit
          git show HEAD~1:src/main/java/burp/hv/HackvertorExtension.java > prev_file.java 2>/dev/null || echo "File not found in previous commit"
          
          if [ -f prev_file.java ]; then
            PREV_VERSION=$(grep -E '^\s*public static String version = "v[0-9]+\.[0-9]+\.[0-9]+";' prev_file.java | sed -E 's/.*"(v[0-9]+\.[0-9]+\.[0-9]+)".*/\1/' || echo "none")
          else
            PREV_VERSION="none"
          fi
          
          CURRENT_VERSION="${{ steps.extract_version.outputs.version }}"
          
          echo "Previous version: $PREV_VERSION"
          echo "Current version: $CURRENT_VERSION"
          
          if [ "$PREV_VERSION" != "$CURRENT_VERSION" ]; then
            echo "Version changed from $PREV_VERSION to $CURRENT_VERSION"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Check if tag exists
        if: steps.check_version.outputs.changed == 'true'
        id: check_tag
        run: |
          VERSION="${{ steps.extract_version.outputs.version }}"
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "Tag $VERSION already exists"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Tag $VERSION does not exist, proceeding with release"
          fi

  build-and-release:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build with Gradle
        run: ./gradlew shadowJar
      
      - name: Get JAR filename
        id: get_jar
        run: |
          JAR_FILE=$(ls build/libs/*-all.jar | head -n 1)
          JAR_NAME=$(basename "$JAR_FILE")
          echo "jar_file=$JAR_FILE" >> $GITHUB_OUTPUT
          echo "jar_name=$JAR_NAME" >> $GITHUB_OUTPUT
          echo "Found JAR: $JAR_NAME"
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.check-version.outputs.version }}
          release_name: Hackvertor ${{ needs.check-version.outputs.version }}
          body: |
            ## Hackvertor ${{ needs.check-version.outputs.version }}
            
            ### Installation
            Download the JAR file below and add it to Burp Suite via:
            - Extender/Extensions tab → Add → Select the downloaded JAR file
            
            ### Changes
            See [commit history](https://github.com/${{ github.repository }}/commits/${{ needs.check-version.outputs.version }}) for details.
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_jar.outputs.jar_file }}
          asset_name: hackvertor-${{ needs.check-version.outputs.version }}.jar
          asset_content_type: application/java-archive